IMP NOTES
*eclipses should be the last parameter in the methord.
*void add(int ...a,int n)   -> it is the wrong statement.
*void add(int n,int ...a)   -> this one is the right statement.
---------------------------------------------------------------------
*copy constructor
  ---------------------
            OR
   Another example of  Constructor Overloading
  -------------------------------------------------------
it is  a constructor which is capable to create a copy of all the elements of one object into another is called copy constructor.

class Ts
{
int a,b,c;
Ts(int a,int b,int c)
{
this.a = a;
this.b = b;
this.c = c;
}

void show()
{
System.out.println(a+b+c);
}

Ts(Ts t)
{
a=t.a;
b=t.b;
c=t.c;
}

public static void main(String args[])
{
Ts t1 = new Ts(10,20,30);
Ts t2 = new Ts(t1);
Ts t3 = new Ts(t2);
t1.show();
t2.show();
t3.show();
}
}

#array as an argument
  ----------------------------
class Ts
{
void add( int a[])
{
 int sum=0;
for(int i=0;i<a.length;i++)
{
sum = sum + a[i];
}
System.out.println(sum);
}

public static void main(String args[])
{
Ts t1 = new Ts();
int x[] = {10,20,30,40,50,70,60,80,90};
int y[] = {1,2,3,4,5,6,7,8,9,10};
t1.add(x);
t1.add(y);
}
}

---------------------------------------X------------------------
#var args(variable argument)
  -----------------------------------
"..."(This symbol name is eclipses)

class Ts
{
void add(int ...a)                                                                  
{
int sum =0;
for(int i=0;i<a.length;i++)
{
sum = sum + a[i];
}
System.out.println(sum);
}

public static void main(String args[])
{
Ts t1 = new Ts();
t1.add(10,20,30,40,50,60,70,80,90);
t1.add(1,2,3,4,5,6,7,8,9);
}
}
-----------------------------------------X------------------------------
