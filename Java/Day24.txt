IMP NOTES
* Java  by default give the first priority to a local variable.
------------------------------------

#Class,Object and Instance variables                                                    |     Day 2
   ---------------------------------------------------                                      ------------

class Test
{
int a,b.c
Public static void main(String args[])
{
Test t1 = new Test();         // this line will allocate the value of an instance variable
Test t2 = new Test();
t1.a = 10;
t1.b = 20;
t1.c = 30;
t2.a = 100;
t2.b = 200;
t2.c = 300;
System.out.println(t1.a+" " + t1.b+" "+t1.c);
System.out.println(t2.a+" "+t2.b+" "+t2.c);
}
}

We can try to reduce this program redundance with the help of different methords.

*first methord   with the help of Mapping
  ----------------- 
                             OR
            * No Argument Methord
             ----------------------------

class Test
{
int a,b,c;
void show()
{
System.out.print(a+" "+b+" "+c);
}

public static void main(String args[])
{
Test t1 = new Test();
Test t2 = new Test();
t1.a=10;
t1.b=20;
t1.c=30;
t2.a=100;
t2.b=200;
t2.c=300;
t1.show();
t2.show();
}
}

* second mathord with the help of parameterized methord
   --------------------
                    OR
          Call By Value
          ---------------
class Test
{
int a,b,c;
void show()
{
System.out.println(a+" "+b+" "+c);
}
void setData(int x,int y,int z)
{
a=x;
b=y;
c=z;
}

public static void main(String args[])
{
Test t1 = new Test();
Test t2 = new Test();
t1.setData(10,20,30);
t2.setData(100,200,300);
t1.show();
t2.show();
}
}

--------------------------------X----------------------------------------
*this
  -----
it is a refernce variable and it is capable to hold the current object(hashCode) and it is also
allow to access and change it's value as well.

class Test
{
int a,b,c;
void show()
{
System.out.print(a+" "+b+" "+c);
}
void setData(int a, int b,int c)
{
this.a=a;
this.a=b;
this.c=c;
}

public static void main(String args[])
{
Test t1 = new Test();
Test t2 = new Test();
t1.setData(10,20,30);
t2.setData(100,200,300);
t1.show();
t2.show();
}
}

-----------------------------------------X-----------------------------------------------

  