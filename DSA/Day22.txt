NOTES:
*Structure Of  Tree Tress have nodes which have three Parts:data part,left child,right child.
  ---------------------
*Root: A tip of the tree which have the node Start is called Root.In the Reference of child This node will be a Parent Node.
* Levels:This will use to describe the position of the node.
*We have to calculate the height or Depth of the Tree. by this formula: Maximum level +1.
                                                                                                                                              --------------------- 
*Haffman Algorithm will use to Decide the shortest Path in a Tree.
*If a Node does note have a child that is called leaf node or Terminal node.
*Degree of a  node will be calculated  by number of child's in a Particular node.
*Degree of a Tree will be decided by the Maximum degree of child/node in a mantion tree is called degree  of a tree.
-------------------------------------------------------------------------------------------------------
#Tree
  ------
                                      A                            ->Root Node                                   Level 0
                   ------------|---------------        -----   ------                                   --------
                   |                                            |
                  B                                           C                                                                      Level 1
     --------|-------                        ------|--------                                                         --------
     |                        |                        |                      |
    D                      E                       F                    G                                                       Level 2
---|--                ---|                        |---                                                                           ---------
H      I               J                            K                                                                      Level 3
                                                                                                                                --------
Tree will be a Part of Unordered data structure or Non Liner data structure.

#Binary Tree
  -------- ------
It is a Tree in which each node can have minimum zero or Maximum two child's.

#strictly Binary Tree
  -----------------------
Each node can have either zero or two child nodes.
1 degree is not allowed.

#Complete Binary Tree
  ----------------------------
It has two Properties:
* it is strictly Binary Tree.
*all the leaf nodes should be only in same level.

#Binary search Tree
   ----------------------
Q)   50,70,30,40,30,10,20,5,60,80,100,65,55,35

                                      50
                   ------------|--------------
                   |                                          |
                 30                                      70
     --------|------                       ------|--------
     |                      |                        |                      |
   10                   40                  60                   90
---|---             ---|                    ---|---             ---|---
|         |              |                        |        |              |         |
5       20          35                   55     65          80    100

#Traversal Algorithm
   ------------------------
Inorder(LNR) :5,10,20,30,35,40,50,55,60,65,70,80,90,100
*Inorder of a Binary search Tree is always Sorted.

Preorder(NLR):50,30,10,5,20,40,35,70,60,55,65,90,80,100

Postorder(LRN):5,20,10,35,40,30,55,65,60,80,100,90,70,50.