#Build a Program of a Tree
  -------------------------------
struct node
{
struct node *ladd;
int data;
struct node *radd;
};
struct node *root =NULL;

struct node *create(struct node *p,int n);
void inorder(struct node *p);
void preorder(struct node *p);
void postorder(struct node *p);

void main()
{
int ch,n;
do
{
printf("-----------Tree---------\n");
printf("Press 1: for Create \n");
printf("Press 2: for Inorder \n");
printf("Press 3: for Preorder \n");
printf("Press 4: for Postorder \n");
printf("Press 5: for exit");
scanf("%d",&ch);
switch(ch)
{
case 1: printf("Enter a value,Press zero to quit");
              scanf("%d",&n);
              while(n!=0)
              {
              root = create(root,n);
              printf("Enter next value");
              scanf("%d",&n);
              }
              break;
case 2: inorder(root);break;
case 3: preorder(root);break;
case 4:postorder(root);break;
case 5:break;
default: printf("Invalid choice");
}
}
while(ch!=5);
}

struct node * create(struct node *p,int n)
{
if(p==NULL)
{
p =(struct node *)malloc(sizeof(struct node));
p->ladd=NULL;
p->data =n;
p->radd =NULL;
}

else
{
if(n<p->data)
{
p->ladd =create(p->ladd,n);
}
else if(n>p->data)
{
p->radd =create(p->radd,n);
}
else
{
printf("Duplicate values are not allowed in a Binary Search Tree \n");
}
}
return(p);
}